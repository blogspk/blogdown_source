ggplot(filter(delay, count > 20), mapping = aes(avgdistance, avgdelay)) + geom_point() + geom_smooth(se=FALSE)
ggplot(filter(delay, count > 20), mapping = aes(avgdistance, avgdelay)) + geom_point(size = count) + geom_smooth(se=FALSE)
ggplot(filter(delay, count > 20), mapping = aes(avgdistance, avgdelay)) + geom_point(aes(size = count)) + geom_smooth(se=FALSE)
ggplot(filter(delay, count > 20), mapping = aes(avgdistance, avgdelay)) + geom_point(aes(size = count), alpha = 0.2) + geom_smooth(se=FALSE)
ggplot(filter(delay, count > 20), mapping = aes(avgdistance, count)) + geom_point(aes(size = count), alpha = 0.2) + geom_smooth(se=FALSE)
ggplot(filter(delay, count > 20), mapping = aes(avgdistance, avgdelay)) + geom_point(aes(size = dest), alpha = 0.2) + geom_smooth(se=FALSE)
ggplot(filter(delay, count > 20 & avgdistance < 3000), mapping = aes(avgdistance, avgdelay)) + geom_point(aes(size = count), alpha = 0.2) + geom_smooth(se=FALSE)
?random
Random
?Random
rep(1:10, 5)
seq(1:10, 4)
sample(1:10, ,5)
x <- sample(1:10, ,5)
x
sort(x)
sort(x, desc=T)
?sort
sort(x, decreasing = FALSE)
sort(x, decreasing = T)
first(x)
x
last(x)
nth(x,)
nth(x,5)
str(countdata)
head(countdata)
first(countdatga)
first(countdata)
temp <- head(countdata)
temp
first(temp)
temp <- temp[ncol(temp)]
temp
temp <- head(countdata)
sort(temmp)
sort(temp)
sort(temp[])
temp <- temp[c(ncol(temp),temp[1])]
temp <- temp[c(ncol(temp),temp[1]),]
temp1 <- cbind(temp(2))
temp
temp(1)
temp[1]
temp1 <- cbind(temp[1], temp[2])
temp1
temp1 <- cbind(temp[2], temp[1])
temp1
first(temp1)
first(temp1[1])
temp1[1]
first(temp1[1])
first(temp1[1,])
last(temp1[1,])
temp1
temp1[1,]
first(temp1[,1])
last(temp1[,1])
min(temp1[,1])
range(temp1[,1])
unique(temp1[,1])
n_distinct(temp1[,1])
?count
?dplyr;:count
?dplyr::count
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 120
sample_rate <- 44100
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave
)
install.packages("audio")
install.packages("dplyr")
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 120
sample_rate <- 44100
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave
)
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 120
sample_rate <- 441
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave)
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 120
sample_rate <- 44100
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave)
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 120
sample_rate <- 441000
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave)
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 200
sample_rate <- 44100
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave)
>play()
?play
play(c(1,2))
play(c(1,2,3,4))
play(c(1,2,3,4), tempo)
play(c(1,2,3,4), tempo= 12)
play(c(1,2,3,4), tempo= 1)
play(c(1,2,3,4), tempo= 1)
play(sin(1:10000/20))
play(sin(1:10000/20))
t = seq(0, 3, 1/8000) #times in seconds if sample for 3 seconds at 8000Hz
>u = (2^15-1)*sin(2*pi*440*t) #440 Hz sine wave that lasts t length seconds (here, 3 seconds)
>w = Wave(u, samp.rate = 8000, bit=16) #make the wave variable
>play(w, "play") #play the wave data by the player, 'pl
t = seq(0, 3, 1/8000) #times in seconds if sample for 3 seconds at 8000Hz
>u = (2^15-1)*sin(2*pi*440*t) #440 Hz sine wave that lasts t length seconds (here, 3 seconds)
>w = Wave(u, samp.rate = 8000, bit=16) #make the wave variable
>play(w, "play") #play the wave data by the player, 'pl
gsub(pattern = ">",replacement = "", c(t = seq(0, 3, 1/8000) ))
gsub(pattern = ">",replacement = "", ">t = seq(0, 3, 1/8000) #times in seconds if sample for 3 seconds at 8000Hz
>u = (2^15-1)*sin(2*pi*440*t) #440 Hz sine wave that lasts t length seconds (here, 3 seconds)
>w = Wave(u, samp.rate = 8000, bit=16) #make the wave variable
>play(w, "play") ")
temp <- as.character(">t = seq(0, 3, 1/8000) #times in seconds if sample for 3 seconds at 8000Hz
>u = (2^15-1)*sin(2*pi*440*t) #440 Hz sine wave that lasts t length seconds (here, 3 seconds)
>w = Wave(u, samp.rate = 8000, bit=16) #make the wave variable
>play(w, "play") ")
temp
temp <- ">t = seq(0, 3, 1/8000) #times in seconds if sample for 3 seconds at 8000Hz
>u = (2^15-1)*sin(2*pi*440*t) #440 Hz sine wave that lasts t length seconds (here, 3 seconds)
>w = Wave(u, samp.rate = 8000, bit=16) #make the wave variable
>play(w, "play") "
library("dplyr")
library("audio")
notes <- c(A = 0, B = 2, C = 3, D = 5, E = 7, F = 8, G = 10)
pitch <- "D D E D G F# D D E D A G D D D5 B G F# E C5 C5 B G A G"
duration <- c(rep(c(0.75, 0.25, 1, 1, 1, 2), 2),
0.75, 0.25, 1, 1, 1, 1, 1, 0.75, 0.25, 1, 1, 1, 2)
bday <- data_frame(pitch = strsplit(pitch, " ")[[1]],
duration = duration)
bday <-
bday %>%
mutate(octave = substring(pitch, nchar(pitch)) %>%
{suppressWarnings(as.numeric(.))} %>%
ifelse(is.na(.), 4, .),
note = notes[substr(pitch, 1, 1)],
note = note + grepl("#", pitch) -
grepl("b", pitch) + octave * 12 +
12 * (note < 3),
freq = 2 ^ ((note - 60) / 12) * 440)
tempo <- 200
sample_rate <- 44100
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave)
play(bday_wave)
tempo <- 100
play(bday_wave)
make_sine <- function(freq, duration) {
wave <- sin(seq(0, duration / tempo * 60, 1 / sample_rate) *
freq * 2 * pi)
fade <- seq(0, 1, 50 / sample_rate)
wave * c(fade, rep(1, length(wave) - 2 * length(fade)), rev(fade))
}
bday_wave <-
mapply(make_sine, bday$freq, bday$duration) %>%
do.call("c", .)
play(bday_wave)
play(bday_wave)
duration
data_frame()
?data_frame()
bday
bday()
head(bday,25)
notes
Xv <- Xf <- Sv <- Sf <-xvbar <- xfbar <-mapten <- g <- NULL
ls()
rm(ist=ls())
rm(list=ls())
ls()
Xv <- Xf <- Sv <- Sf <-xvbar <- xfbar <-mapten <- g <- NULL
ls()
g
x <- y <-  3
x
y
ls()
temp <- read.csv(file.choose())
getwd()
library(lattice)
library("blogdown")
library('lattice')
library('ggplot2')
library('microbenchmark')
library('rbenchmark')
t
t
gdat <- data.frame(x = runif(n = 1000,  min = 0, max = 1000),
y = runif(n = 1000,  min = 0, max = 1000))
str(gdat)
gdat1 <-  cbind(gdat, gender=sample(c('M', 'F'), 100, replace= T))
str(gdat1)
ggplot(gdat1) + geom_bar(aes(x=gender))
histogram(gender, data=gdat1)
histogram(gdat1$gender)
?histogram
histogram(gdat1$gender, type='count')
histogram(gender, data=gdat1, type='count')
histogram(~ gender, data=gdat1, type='count')
histogram(~ gender, data=gdat1, type='count')
hist(gender, data=gdat1)
histogram(~ gender, data=gdat1, type='count')
?hist
hist(gdat1$gender)
hist(gdat1$gender, freq = F)
barplot(gdat1$gender, freq = F)
barplot(gdat1$gender)
?barplot
barplot(gdat1)
plot(gdat1$gender)
plot(gender, data=gdat1
)
plot(~ gender, data=gdat1
)
plot(~ gender, data=gdat1
)
microbenchmark(ggplot(gdat1) + geom_bar(aes(x=gender)),
histogram(~ gender, data=gdat1, type='count'),
plot(~ gender, data=gdat1)
)
ggplot(gdat1) + geom_bar(aes(x=gender))
histogram(~ gender, data=gdat1, type='count')
plot(~ gender, data=gdat1)
mbmh1 <- microbenchmark(ggplot(gdat1) + geom_bar(aes(x=gender)),
histogram(~ gender, data=gdat1, type='count'),
plot(~ gender, data=gdat1), times = 20)
autoplot(mbmh1)
mbmh2 <- microbenchmark(plot(~ gender, data=gdat1),
ggplot(gdat1) + geom_bar(aes(x=gender)),
histogram(~ gender, data=gdat1, type='count'), times = 20)
autoplot(mbmh2)
mbmh3 <- microbenchmark(histogram(~ gender, data=gdat1, type='count'),
plot(~ gender, data=gdat1),
ggplot(gdat1) + geom_bar(aes(x=gender)), times = 20)
autoplot(mbmh3)
mrbh1 <- benchmark(ggplot(gdat1) + geom_bar(aes(x=gender)),
histogram(~ gender, data=gdat1, type='count'),
plot(~ gender, data=gdat1), replications = 20,
columns = c("test", "replications", "elapsed",
"relative", "user.self", "sys.self"))
mrbh2 <- benchmark(plot(~ gender, data=gdat1),
ggplot(gdat1) + geom_bar(aes(x=gender)),
histogram(~ gender, data=gdat1, type='count'),
columns = c("test", "replications", "elapsed",
"relative", "user.self", "sys.self"))
mrbh3 <- benchmark(histogram(~ gender, data=gdat1, type='count'),
plot(~ gender, data=gdat1),
ggplot(gdat1) + geom_bar(aes(x=gender)), replications = 20,
columns = c("test", "replications", "elapsed",
"relative", "user.self", "sys.self"))
mrbh1
mrbh2
mrbh3
mrbh1
mrbh2
mrbh3
systhg <- system.time(for(i in seq_len(100)){
g <- ggplot(gdat1) + geom_bar(aes(x=gender))
g
})
systhb <- system.time(for(i in seq_len(100)){
plot(~ gender, data=gdat1)
})
systhl <- system.time(for(i in seq_len(100)){
l <-  histogram(~ gender, data=gdat1, type='count')
l
})
systhg
systhb
systhl
systhg <- system.time(for(i in seq_len(1000)){
g <- ggplot(gdat1) + geom_bar(aes(x=gender))
g
})
systhb <- system.time(for(i in seq_len(1000)){
plot(~ gender, data=gdat1)
})
systhl <- system.time(for(i in seq_len(1000)){
l <-  histogram(~ gender, data=gdat1, type='count')
l
})
systhg
systhb
systhl
ls
ls()
rm('./Rdata')
rm(~/.Rdata)
rm("~/.Rdata")
rm("~/.RData")
rm(~/.RData)
ls()
rm(list=ls())
getwd()
setwd('C:/My Files/NOYFB/blogspk18/')
ls()
install.packages("blogdown")
install.packages("blogdown")
require(blogdown)
blogdown::install_hugo()
blogdown::update_hugo()
blogdown::new_site()
cd ../
getwd()
setwd('./github/')
require('blogdown')
install_hugo()
new_site()
setwd('./blogdown_source/')
new_site()
new_site(dir = 'blogdown_source',
theme = 'hyde hyde',
format = 'toml')
new_site(dir = 'blogdown_source',
theme = 'htr3n/hyde-hyde',
format = 'toml')
new_site(dir = 'blogdown_source',
theme = 'htr3n/hyde-hyde',
format = 'toml')
getwd()
setwd('../../github/')
getwd()
new_site(dir = 'blogdown_source',
theme = 'htr3n/hyde-hyde',
format = 'toml')
new_site(dir = 'blogdown_source',
theme = 'htr3n/hyde-hyde',
format = 'toml')
new_post(title = 'hello-world.Rmd')
getwd()
setwd('./blogdown_source/')
new_post(title = 'hello-world.Rmd')
serve_site()
getwd()
new_post(title = 'hello-world.Rmd')
setwd('./content/post/')
new_post(title = 'hello-world.Rmd')
setwd('../../../blogdown_source/')
new_post(title = 'hello-world.Rmd')
new_post(title = 'hello-world-1.Rmd')
new_post(title = 'hello-world.Rmd')
serve_site()
build_site()
build_site()
serve_site()
